SCU / IntrCtrl / DDR / SFLASH - img loading  :  sss  :  asm_dcache   ----- DDRC / EFUSE / sss


INT32 main(void)

void ncBL_DBG_GpioToggle(void) v

void ncBL_DBG_RegInit(void)

void ncBL_SCU_Initialize(ptBOOT_INFO ptBootInfo)

void ncBL_UART_Initialize(ptBOOT_INFO ptBootInfo)

void ncBL_INTC_Initialize(void)

INT32 ncBL_DDR_Initialize(ptBOOT_INFO ptBootInfo)


INT32 ncBL_SF_Initialize(ptBOOT_INFO ptBootInfo)

	INT32 ncBL_SF_CheckSPIBitRate(ptBOOT_INFO ptBootInfo)

		INT32 ncBL_SF_GetHeader(ptBOOT_INFO ptBootInfo, UINT32 CoreType)

	INT32 ncBL_SF_CheckQSPIBitRate(ptBOOT_INFO ptBootInfo)
	INT32 ncBL_SF_CheckDMASPIBitRate(ptBOOT_INFO ptBootInfo)


INT32 ncBL_SF_ImageLoading(ptBOOT_INFO ptBootInfo, UINT32* Status)

	INT32 ncBL_SF_CheckHeader(ptBOOT_INFO ptBootInfo, UINT32 CoreType, UINT32 ImgType)
	INT32 ncBL_SF_GetImage(ptBOOT_INFO ptBootInfo, UINT32 CoreType, UINT32 ImgType)

	Result = sss_SecureRun(ptBootInfo->tImage.mDestAddr[CoreType], UsedCodeKey);

	ASM_DCACHE_FLUSH(ptBootInfo->tImage.mDestAddr[CoreType], ptBootInfo->tHeader[CoreType][ImgType].mLength);


void ncBL_DBG_Result(INT32 Ret)

void ncBL_SF_DeInitialize(ptBOOT_INFO ptBootInfo)

void ncBL_SYS_Jump(UINT32 Status)

void ncBL_DBG_Step(UINT8 Bit) v




void ncBL_SE_Abort_Handler(ptARM_FAULT pFault)

void ncBL_SE_Prefetch_Handler(ptARM_FAULT pFault)

void ncBL_SE_Undefined_Handler(ptARM_FAULT pFault)

	void ncBL_SE_FaultTrig(void)

	void ncBL_SE_DebugCoreDump(ptARM_FAULT pFault, const char *msg)



static UINT32 __checksum(UINT32 *pSrc, UINT32 Length)
static INT32 __compare(UINT8 *pSrc, UINT8* pDes, UINT32 Length)

------------------------------------------------------------------------------------------------------------------------


void ncBL_DBG_GpioToggle(void) v  <--- FPGA Mode 전용?
void ncBL_DBG_RegInit(void)                                : DBG Register를 초기화 한다.(BL Ver 정보 기록)
	void ncBL_DBG_Step(UINT8 Bit) v                        : DBG Step Register에 step 값을 쓴다.
void ncBL_SCU_Initialize(ptBOOT_INFO ptBootInfo)           : SCU(System Control Unit)을 초기화 한다.
		* BS Regi로부터 BootStrap정보읽기(SecureEn/sFlashCS/PLLConfig), 
		  SecureMode설정(En/Ds), 
		  Clock설정(CPU/APB/DDR/QSPI)
		: BL1의 경우 -> Clock설정(AXI,ARM,RAM,ROM),Clock Path설정,PLL0/PLL1/PLL2/PLL3설정,Bus P-Clk En(QSPI/SPI/DMAC/UART/ICU/ATOP)),Bus A-Clk En(RAM/DMAC/QSPI),Bus H-Clk En(Secure_HS/Secure-IS),IP Clk En(Safety/QSPI/TNG/HMAC/PKA/AES/SECURE),Reset BUS,Reset IP,SRAM ECC En)
		: BL2의 경우 -> Clock설정(DDRC clk en),Bus P-Clk(DDRC),Bus A-Clk(DDRC),DDRC Clk en(DFI/MDII/PHT)
void ncBL_UART_Initialize(ptBOOT_INFO ptBootInfo)          : UART를 초기화 한다.(UART TX PAD 초기화, Baudrate=57600 설정,Ref APB Clk 사용)
void ncBL_INTC_Initialize(void)                            : Interrupt Controller를 초기화 한다.(Intr Handler 초기화 설정(총98개), TargetCPU/TriggerType/IntrType/Priorty(우선순위)/TypeGroup/IntrMask 설정, irq/fiq enable)
INT32 ncBL_DDR_Initialize(ptBOOT_INFO ptBootInfo)          : DDR Controller를 초기화 한다.(LPDDR3/DDR3/LPDDR2에 따른 DDR 설정)
INT32 ncBL_SF_Initialize(ptBOOT_INFO ptBootInfo)           : Serial Flash를 초기화 한다.(SFlashCS/Bitrate/Clock설정, PAD모드(SPI))
	INT32 ncBL_SF_CheckSPIBitRate(ptBOOT_INFO ptBootInfo)  : SPI Bitrate을 체크하여 비정상일 경우 재설정한다.(Set Bitrate)
		INT32 ncBL_SF_GetHeader(ptBOOT_INFO ptBootInfo, UINT32 CoreType) : Img Header를 읽는다.(Img Header Read(16Byte)==SignatureID 체크)
	INT32 ncBL_SF_CheckQSPIBitRate(ptBOOT_INFO ptBootInfo) : QSPI Bitrate을 체크하여 유효하지 않을 경우 재설정한다.
	INT32 ncBL_SF_CheckDMASPIBitRate(ptBOOT_INFO ptBootInfo) : DMA 모드일 경우 SPI Bitrate을 체크하여 비정상일 경우 재설정한다.
INT32 ncBL_SF_ImageLoading(ptBOOT_INFO ptBootInfo, UINT32* Status) : Img Header를 읽어 유효성 검사후 Img를 읽고 결과를 Status 변수에 저장한다.
	INT32 ncBL_SF_CheckHeader(ptBOOT_INFO ptBootInfo, UINT32 CoreType, UINT32 ImgType) : Header 정보의 SigantureID & LimitSize를 체크한다.
	INT32 ncBL_SF_GetImage(ptBOOT_INFO ptBootInfo, UINT32 CoreType, UINT32 ImgType) : Img를 읽는다.(ReadData & checksum)
	Result = sss_SecureRun(ptBootInfo->tImage.mDestAddr[CoreType], UsedCodeKey);                                <------
	ASM_DCACHE_FLUSH(ptBootInfo->tImage.mDestAddr[CoreType], ptBootInfo->tHeader[CoreType][ImgType].mLength);   <------
void ncBL_DBG_Result(INT32 Ret)                            : Bootloader 실행 결과 체크, DBG Regi에 기록(NOK->DBG Regi에 'FAIL'기록->FaultTrig  or DBG Regi에'OK'기록->Uart 'Success'출력)
void ncBL_SF_DeInitialize(ptBOOT_INFO ptBootInfo)          : Serial Flash를 해제한다.(sFlashCS->FreePadCtrl(CS)->SSP_DeInit)
void ncBL_SYS_Jump(UINT32 Status)                          : Status(CoreType=E_Core_SIG/E_Core_DSP)값에 따라 Remap Size를 정하고 Remap한후 PC Count를 PC_CountReset값으로 돌린다.(BL1의 경우 PC_CountReset=APACHE_IRAM_BASE(0x04000000), BL2의 경우 PC_CountReset='0')

void ncBL_SE_Abort_Handler(ptARM_FAULT pFault)             : Data Abort 메세지 출력(UART)
void ncBL_SE_Prefetch_Handler(ptARM_FAULT pFault)          : Prefetch Error 메세지 출력
void ncBL_SE_Undefined_Handler(ptARM_FAULT pFault)         : Undefined Error 메세지 출력
	void ncBL_SE_FaultTrig(void)                           : Fault 상태에서 While 대기, hang
	void ncBL_SE_DebugCoreDump(ptARM_FAULT pFault, const char *msg) : Core Dump(SPSR/PC/Reg)정보 & msg 출력